/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PulgasLocas.GUI;

import PulgasLocas.Elementos.Boundable;
import PulgasLocas.Elementos.Hilo;
import PulgasLocas.Elementos.Repaintable;
import PulgasLocas.Juego.Simulador;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.image.BufferStrategy;

/**
 *
 * @author santi
 */
public class MainWindow extends javax.swing.JFrame implements Repaintable, Boundable{

    private Simulador simuladorBatalla;
    private final BufferStrategy bf;
    /**
     * Creates new form MainWindow
     */
    private double maxScore;
    private int width;
    private int height;
    private String nombre;
    private DialogNombre dialog;
    private Hilo mainThread;
    private double score;
    private Simulador garden;
    public MainWindow(int width, int height) {
        initComponents();
        createBufferStrategy(2);        //creamos dos buffers
        bf = this.getBufferStrategy();
        maxScore = 0;
        score = 0;
        this.width = width;
        this.height = height;
        this.setSize(width, height);
        dialog = new DialogNombre(this,true,this.getMaxScore());
        dialog.setVisible(true);
        nombre = dialog.getNombre();
        garden = new Simulador(width, height);
        this.setGarden(garden);
        this.setTitle("Simulador de Pulgas locas");
        this.setVisible(true);
        mainThread = new Hilo(garden,this, this);
        mainThread.start();
        this.setSize(width+50,height+50);
    }
    
    public double getMaxScore(){
        return maxScore;
    }
    public void setGarden(Simulador garden){
        this.simuladorBatalla = garden;
    }

    @Override
    public void paint(Graphics g) {
        Graphics2D g2 = null;
        score = garden.getScore();
 
        try {
            //obtenemos uno de los buffers para dibujar
            g2 = (Graphics2D) bf.getDrawGraphics();
            super.paint(g2);
            simuladorBatalla.draw(g2);
            this.setTitle("MataPulgas 3000 \t\t" + nombre +": " + score +" puntos.");
        } finally {
            g2.dispose();
        }
 
        //pintamos el buffer en pantalla
        bf.show();
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyChar() == 'q'){
            acabar();
        }
        
        if (evt.getKeyCode() == KeyEvent.VK_S | evt.getKeyCode() == KeyEvent.VK_SPACE | evt.getKeyCode() == KeyEvent.VK_P | evt.getKeyCode() == KeyEvent.VK_M | evt.getKeyCode() == KeyEvent.VK_S  | evt.getKeyCode() == KeyEvent.VK_F) {
            simuladorBatalla.keyPressed(evt.getKeyCode(),this);
            repaint();
        }
        
        if(simuladorBatalla.juegoAcabado()){
            acabar();
        }


    }//GEN-LAST:event_formKeyPressed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        simuladorBatalla.mouseClicked(evt.getX(), evt.getY(), this);
        repaint();
        if(simuladorBatalla.juegoAcabado()){
            acabar();
        }
    }//GEN-LAST:event_formMousePressed

    public void acabar(){
        if(maxScore < simuladorBatalla.getScore()){
            maxScore = simuladorBatalla.getScore();
        }
        dialog.setNombre(nombre);
        dialog.setMaxScore(getMaxScore());
        garden = new Simulador(width, height);
        this.setGarden(garden);
        dialog.setVisible(true);
        mainThread = new Hilo(garden,this, this);
        mainThread.start();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        MainWindow window = new MainWindow(800, 600);
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public int getBoundWidth() {
        return width;
    }

    @Override
    public int getBoundHeight() {
        return height;
    }
}
